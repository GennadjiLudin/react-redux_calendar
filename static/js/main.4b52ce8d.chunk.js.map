{"version":3,"sources":["helpers/helpers.js","components/WeekDays/WeekDay/WeekDay.jsx","components/WeekDays/WeekDays.jsx","actions/actionCreator.js","actions/actionHeader.js","components/DayTodo/DayTodo.jsx","components/Day/Day.jsx","components/Dates/Dates.jsx","containers/Calendar/Calendar.js","layers/Header/Header.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/FilterTodo/FilterTodo.jsx","containers/Todos/Todos.jsx","components/ReadOnlyTask/ReadOnlyTask.jsx","components/Form/Form.jsx","components/EditModeTask/EditModeTask.jsx","components/AddMode/AddMode.jsx","containers/Editbox/Editbox.jsx","components/Socials/Social/Social.jsx","components/Socials/Socials.jsx","components/Footer/Footer.jsx","containers/Sections/Section.jsx","components/Organizer/Organizer.jsx","App.js","serviceWorker.js","reducers/date.js","reducers/filters.js","reducers/tasks.js","reducers/rootReducer.js","store.js","index.js"],"names":["getRealDayOfWeek","jsDay","getFirstDayOfMonth","year","month","Date","getDay","getLastDayOfMonth","getNextMonth","getPrevMonth","setNumWithZero","num","WeekDay","weekDayName","variables","className","weekDaysName","WeekDays","map","index","key","changeIsAddModeAction","isAddMode","type","payload","changeMonth","changeYear","DayTodo","title","Day","props","date","id","onClickDateHandler","rightClassName","allDays","selectedDay","useEffect","onClick","tasks","task","i","connect","state","dispatch","selectDay","day","selectDayAction","datesArr","arrPrev","arrNext","currentDate","getDate","currentYear","getFullYear","currentMonth","getMonth","isCurrentDay","getDateId","onClickDateHandlerCurrent","onClickDateHandlerPrev","onClickDateHandlerNext","getAllDays","localStorage","getItem","JSON","parse","getAllDaysAction","useState","setDatesArr","setArrPrev","setArrNext","to","getLastDateOfMonth","firstElemsNum","jsFirstDay","getFirstElemsNum","lastElemsNum","jsLastDay","getLastElemsNum","LastDateOfPrevMonth","getLastDateOfPrevMonth","dates","arr","from","newArr","push","range","nexts","elem","addLastElemsNum","prevs","unshift","addFirstElemsNum","differenceArr","concat","length","newArrNext","splice","icon","faChevronLeft","faChevronRight","Todo","isCompleted","removeTask","completeTask","selectedTask","faCheck","faCircle","faTrashAlt","defaultProps","TodoList","filters","filteredTasks","setFilteredTasks","activeFilter","filter","filterTasks","taskList","uuid","tasksList","taskId","FILTERS_BTN","text","FilterTodo","changeFilter","activeCounter","setActiveCounter","completedCounter","setCompletedCounter","getCompletedCounter","counter","checkCounter","amount","changeFilterAction","sortTasks","droppableIndexStart","droppableIndexEnd","draggableId","sortTasksAction","changeIsAdd","dayTitle","faPlus","ReadOnlyTask","setEditMode","editMode","description","faPencilAlt","Form","changeMode","argument","setTitle","setDescription","handleClick","htmlFor","name","value","onChange","e","target","maxLength","required","cols","rows","faTimes","EditModeTask","changeTask","trim","AddMode","addTask","addTitle","setAddTitle","addDescription","setAddDescription","changeTaskAction","addTaskAction","Social","socialImg","link","href","rel","src","alt","socials","Socials","social","Footer","Section","children","Organizer","hide","setHide","faArrowCircleRight","faArrowCircleLeft","App","Boolean","window","location","hostname","match","DATES","action","TASKS","newAllDaysObj","setLocalStorage","newAllDays","setItem","stringify","newDays","console","log","newSelectTasks","find","newAddTask","newAddTaskInSelectedDay","newSelectedDay","newStateTasks","newTask","newChangeTask","newSelectedDayTasks","newChangeTaskDay","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b52ce8d.chunk.js","sourcesContent":["export const range = (arr, from, to) => {\r\n    let newArr = [...arr];\r\n    for (let i = from; i <= to; i++) {\r\n        newArr.push(i);\r\n    }\r\n    return newArr;\r\n}\r\n\r\nexport const addFirstElemsNum = (num, elem, arr) => {\r\n    let newArr = [...arr];\r\n    for (let i = 0; i < num; i++) {\r\n        newArr.unshift(elem);\r\n        elem--;\r\n    }\r\n    return newArr;\r\n}\r\n\r\nexport const addLastElemsNum = (num, elem, arr) => {\r\n    let newArr = [...arr];\r\n    for (let i = 0; i < num; i++) {\r\n        newArr.push(elem);\r\n        elem++;\r\n    }\r\n    return newArr;\r\n}\r\n\r\nexport const getLastDateOfMonth = (year, month) => {\r\n    let date = new Date(year, month + 1, 0);\r\n    return date.getDate();\r\n}\r\n\r\nexport const getFirstElemsNum = (year, month) => {\r\n    let jsFirstDay = getFirstDayOfMonth(year, month);\r\n    let realFirstDay = getRealDayOfWeek(jsFirstDay);\r\n    return realFirstDay - 1;\r\n}\r\n\r\nexport const getLastElemsNum = (year, month) => {\r\n    let jsLastDay = getLastDayOfMonth(year, month);\r\n    let realLastDay = getRealDayOfWeek(jsLastDay);\r\n    return 7 - realLastDay + 7;\r\n}\r\n\r\nexport const getRealDayOfWeek = (jsDay) => {\r\n    if (jsDay === 0) {\r\n        return 7;\r\n    } else {\r\n        return jsDay;\r\n    }\r\n}\r\n\r\nexport const getFirstDayOfMonth = (year, month) => {\r\n    let date = new Date(year, month, 1);\r\n    return date.getDay();\r\n}\r\n\r\nexport const getLastDayOfMonth = (year, month) => {\r\n    let date = new Date(year, month + 1, 0);\r\n    return date.getDay();\r\n}\r\n\r\nexport const getLastDateOfPrevMonth = (year, month) => {\r\n    let date = new Date(year, month, 0);\r\n    return date.getDate();\r\n}\r\n\r\nexport const getNextYear = (year, month) => {\r\n    if (month === 11) {\r\n        return year + 1;\r\n    } else {\r\n        return year;\r\n    }\r\n}\r\n\r\nexport const getNextMonth = (month) => {\r\n    if (month === 11) {\r\n        return 0;\r\n    } else {\r\n        return month + 1;\r\n    }\r\n}\r\n\r\nexport const getPrevYear = (year, month) => {\r\n    if (month === 0) {\r\n        return year - 1;\r\n    } else {\r\n        return year;\r\n    }\r\n}\r\n\r\nexport const getPrevMonth = (month) => {\r\n    if (month === 0) {\r\n        return 11;\r\n    } else {\r\n        return month - 1;\r\n    }\r\n}\r\n\r\nexport const getMonthName = (num) => {\r\n    let monthes = [\r\n        'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',\r\n        'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'\r\n    ];\r\n    return monthes[num];\r\n}\r\n\r\nexport const setNumWithZero = (num) => {\r\n    if (num < 10) {\r\n        return num = '0' + num;\r\n    } else {\r\n        return num;\r\n    }\r\n}","import React from 'react';\r\n\r\nimport './WeekDay.scss';\r\n\r\nconst WeekDay = ({ weekDayName, variables = \"\" }) => {\r\n    return (\r\n        <div className={`week-day ${variables}`}>{weekDayName}</div>\r\n    )\r\n}\r\n\r\nexport default WeekDay;","import React from 'react';\r\n\r\nimport './WeekDays.scss';\r\n\r\nimport WeekDay from './WeekDay/WeekDay';\r\n\r\nconst weekDaysName = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'];\r\n\r\nconst WeekDays = () => {\r\n    return (\r\n        <div className=\"week-days\">\r\n            {weekDaysName.map((weekDayName, index) => (\r\n                <WeekDay variables={index >= 5 ? \"weekend\" : null} key={index} weekDayName={weekDayName} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeekDays;","\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const COMPLETE_TASK = 'COMPLETE_TASK';\r\nexport const CHANGE_FILTERS = 'CHANGE_FILTERS';\r\nexport const CHANGE_TASK = 'CHANGE_TASK';\r\nexport const DRAG_HAPPENED = 'DRAG_HAPPENED';\r\nexport const SELECT_DAY = 'SELECT_DAY';\r\nexport const SELECT_TASK = 'SELECT_TASK';\r\nexport const CHANGE_ADD_MODE = 'CHANGE_ADD_MODE';\r\nexport const GET_ALL_DAYS = 'GET_ALL_DAYS';\r\n\r\nexport const getAllDaysAction = () => {\r\n    let allDays = localStorage.getItem('allDays');\r\n    return dispatch => {\r\n        dispatch({\r\n            type: GET_ALL_DAYS,\r\n            payload: {\r\n                allDays: JSON.parse(allDays),\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const addTaskAction = (taskId, title, description, isCompleted) => ({\r\n    type: ADD_TASK,\r\n    payload: {\r\n        taskId,\r\n        title,\r\n        description,\r\n        isCompleted,\r\n    }\r\n});\r\n\r\nexport const changeIsAddModeAction = (isAddMode) => ({\r\n    type: CHANGE_ADD_MODE,\r\n    payload: {\r\n        isAddMode,\r\n    }\r\n})\r\n\r\nexport const selectDayAction = (id, day, month, year) => ({\r\n    type: SELECT_DAY,\r\n    payload: {\r\n        id,\r\n        day,\r\n        month,\r\n        year,\r\n    }\r\n})\r\n\r\nexport const selectTaskAction = taskId => ({\r\n    type: SELECT_TASK,\r\n    payload: {\r\n        taskId,\r\n    }\r\n})\r\n\r\nexport const removeTaskAction = (taskId) => ({\r\n    type: REMOVE_TASK,\r\n    payload: {\r\n        taskId,\r\n    }\r\n})\r\n\r\nexport const completeTaskAction = (taskId) => ({\r\n    type: COMPLETE_TASK,\r\n    payload: {\r\n        taskId,\r\n    }\r\n})\r\n\r\nexport const changeFilterAction = activeFilter => ({\r\n    type: CHANGE_FILTERS,\r\n    payload: {\r\n        activeFilter,\r\n    }\r\n})\r\n\r\nexport const changeTaskAction = (taskId, title, description) => ({\r\n    type: CHANGE_TASK,\r\n    payload: {\r\n        taskId,\r\n        title,\r\n        description,\r\n    }\r\n})\r\n\r\nexport const sortTasksAction = (\r\n    droppableIndexStart,\r\n    droppableIndexEnd,\r\n    draggableId\r\n) => ({\r\n        type: DRAG_HAPPENED,\r\n        payload: {\r\n            droppableIndexStart,\r\n            droppableIndexEnd,\r\n            draggableId\r\n        }\r\n    })","export const CHANGE_MONTH = 'CHANGE_MONTH';\r\nexport const CHANGE_YEAR = 'CHANGE_YEAR';\r\n\r\nexport const changeMonth = (type) => ({\r\n    type: CHANGE_MONTH,\r\n    payload: {\r\n        type,\r\n    }\r\n})\r\n\r\nexport const changeYear = (type) => ({\r\n    type: CHANGE_YEAR,\r\n    payload: {\r\n        type,\r\n    }\r\n})","import React from 'react';\r\n\r\nimport './DayTodo.scss';\r\n\r\nconst DayTodo = ({title, variables = ''}) => {\r\n    return (\r\n        <div className={`day-todo ${variables}`}>{title}</div>\r\n    )\r\n}\r\n\r\nexport default DayTodo;","import React, {useEffect} from 'react';\r\n\r\nimport DayTodo from '../DayTodo/DayTodo';\r\nimport { setNumWithZero } from '../../helpers/helpers';\r\n\r\nimport './Day.scss';\r\n\r\nconst Day = (props) => {\r\n    const { date, id, onClickDateHandler, rightClassName, allDays, selectedDay, month, year } = props;\r\n\r\n    useEffect(() => {\r\n        if(rightClassName === 'date-num date-num-current') {\r\n            onClickDateHandler(id, setNumWithZero(date), month, year);\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div \r\n            className={selectedDay !== null && selectedDay.id === id ? \"date date-selected\" : \"date\"}\r\n            id={id}\r\n            onClick={() => onClickDateHandler(id, setNumWithZero(date), month, year)}\r\n        >\r\n            <span className={rightClassName}>{date}</span>\r\n            <div className=\"date-wrap__tasks\">\r\n                {allDays[id] && allDays[id].tasks.map((task, i) => (\r\n                    i < 4 && <DayTodo key={i} title={task.title} onClickDateHandler={onClickDateHandler} variables={task.variables} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Day;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setNumWithZero } from '../../helpers/helpers';\r\nimport { selectDayAction } from '../../actions/actionCreator';\r\nimport { changeMonth, changeYear } from '../../actions/actionHeader';\r\nimport Day from '../Day/Day';\r\n\r\nimport './Dates.scss';\r\n\r\nconst Dates = (props) => {\r\n    const { datesArr, arrPrev, arrNext, month, year, selectDay, allDays, selectedDay, changeMonth, changeYear } = props;\r\n\r\n    const isCurrentDay = (day) => {\r\n        let date = new Date();\r\n        let currentDate = date.getDate();\r\n        let currentYear = date.getFullYear();\r\n        let currentMonth = date.getMonth();\r\n\r\n        return currentYear === year && currentMonth === month && currentDate === day;\r\n    }\r\n\r\n    const rightClassName = (date, type) => {\r\n        switch (type) {\r\n            case 'prev':\r\n                return \"date-num date-num-prev\";\r\n            case 'next':\r\n                return \"date-num date-num-next\";\r\n            default:\r\n                return isCurrentDay(date) ? \"date-num date-num-current\" : \"date-num\";\r\n        }\r\n    }\r\n\r\n    const getDateId = (date, type) => {\r\n        switch (type) {\r\n            case 'prev':\r\n               return `${month === 0 ? year - 1 : year}${month === 0 ? 11 : setNumWithZero(month - 1)}${setNumWithZero(date)}`;\r\n            case 'next':\r\n                return `${month === 11 ? year + 1 : year}${month === 11 ? setNumWithZero(0) : setNumWithZero(month + 1)}${setNumWithZero(date)}`;\r\n            default:\r\n                return `${year}${setNumWithZero(month)}${setNumWithZero(date)}`;\r\n        }\r\n    }\r\n\r\n    const onClickDateHandlerCurrent = (id, date, month, year) => {\r\n        selectDay(id, date, setNumWithZero(month + 1), year);\r\n    }\r\n\r\n    const onClickDateHandlerPrev = (id, date, month, year) => {\r\n        selectDay(id, date, month === 0 ? 12 : setNumWithZero(month), year);\r\n        changeMonth(\"\");\r\n        if(month === 0) changeYear(\"\");\r\n    }\r\n\r\n    const onClickDateHandlerNext = (id, date, month, year) => {\r\n        selectDay(id, date, month === 11 ? setNumWithZero(1) : setNumWithZero(month + 2), year);\r\n        changeMonth(\"next\");\r\n        if(month === 11) changeYear(\"next\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"dates\">\r\n            {arrPrev.map(date => (\r\n                <Day\r\n                    key={getDateId(date, 'prev')}\r\n                    date={date}\r\n                    month={month}\r\n                    year={year}\r\n                    id={getDateId(date, 'prev')}\r\n                    onClickDateHandler={onClickDateHandlerPrev}\r\n                    rightClassName={rightClassName(date, 'prev')}\r\n                    allDays={allDays}\r\n                    selectedDay={selectedDay}\r\n                />\r\n            ))}\r\n            {datesArr.map(date  => (\r\n                <Day \r\n                    key={getDateId(date, '')}\r\n                    date={date}\r\n                    month={month}\r\n                    year={year}\r\n                    id={getDateId(date, '')}\r\n                    onClickDateHandler={onClickDateHandlerCurrent}\r\n                    rightClassName={rightClassName(date, '')}\r\n                    allDays={allDays}\r\n                    selectedDay={selectedDay}\r\n                />\r\n            ))}\r\n            {arrNext.map(date => (\r\n                <Day\r\n                    key={getDateId(date, 'next')}\r\n                    date={date}\r\n                    month={month}\r\n                    year={year}\r\n                    id={getDateId(date, 'next')}\r\n                    onClickDateHandler={onClickDateHandlerNext}\r\n                    rightClassName={rightClassName(date, 'next')}\r\n                    allDays={allDays}\r\n                    selectedDay={selectedDay}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { month, year } = state.date;\r\n    const { allDays, selectedDay } = state.tasks;\r\n    return {\r\n        month,\r\n        year,\r\n        allDays,\r\n        selectedDay,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      selectDay: (id, day, month, year) => dispatch(selectDayAction(id, day, month, year)),\r\n      changeMonth: type => dispatch(changeMonth(type)),\r\n      changeYear: type => dispatch(changeYear(type)),\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Dates);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { \r\n    getLastElemsNum, \r\n    getFirstElemsNum, \r\n    getLastDateOfMonth,\r\n    addLastElemsNum,\r\n    addFirstElemsNum,\r\n    getLastDateOfPrevMonth,\r\n    range\r\n} from '../../helpers/helpers';\r\n\r\nimport WeekDays from '../../components/WeekDays/WeekDays';\r\nimport Dates from '../../components/Dates/Dates';\r\nimport { getAllDaysAction } from '../../actions/actionCreator';\r\n\r\nimport './Calendar.scss';\r\n\r\nconst maxDays = 42;\r\n\r\nfunction Calendar(props) {\r\n    const { month, year, getAllDays } = props;\r\n    const [datesArr, setDatesArr] = useState([]);\r\n    const [arrPrev, setArrPrev] = useState([]);\r\n    const [arrNext, setArrNext] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let from = 1;\r\n        let to = getLastDateOfMonth(year, month);\r\n        let firstElemsNum = getFirstElemsNum(year, month);\r\n        let lastElemsNum = getLastElemsNum(year, month);\r\n        let LastDateOfPrevMonth = getLastDateOfPrevMonth(year, month);\r\n        let dates = range([], from, to);\r\n        let nexts = addLastElemsNum(lastElemsNum, from, []);\r\n        let prevs = addFirstElemsNum(firstElemsNum, LastDateOfPrevMonth, []);\r\n    \r\n        setDatesArr(dates);\r\n        setArrPrev(prevs);\r\n        setArrNext(nexts);\r\n        \r\n        let finalArr = prevs.concat(dates, nexts);\r\n        let differenceArr = finalArr.length - maxDays;\r\n    \r\n        if(differenceArr !== 0) {\r\n            let newArrNext = [...nexts];\r\n            newArrNext.splice(newArrNext.length - differenceArr);\r\n            setArrNext(newArrNext);\r\n        }\r\n    }, [month, year])\r\n\r\n    useEffect(() => {\r\n        getAllDays();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"calendar\">\r\n            <WeekDays />\r\n            <Dates datesArr={datesArr} arrPrev={arrPrev} arrNext={arrNext} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { month, year } = state.date;\r\n    return {\r\n        month,\r\n        year,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllDays: () => dispatch(getAllDaysAction()),\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Calendar);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getMonthName } from '../../helpers/helpers';\r\nimport { changeMonth, changeYear } from '../../actions/actionHeader';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Header.scss';\r\n\r\nconst Header = (props) => {\r\n    const {month, year, changeMonth, changeYear} = props;\r\n\r\n    const onClickHandlerPrev = () => {\r\n        changeMonth(\"\");\r\n        if(month === 0) changeYear(\"\");\r\n    }\r\n\r\n    const onClickHandlerNext = () => {\r\n        changeMonth(\"next\");\r\n        if(month === 11) changeYear(\"next\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <span className=\"header__logo\">КАЛЕНДАРЬ-ОРГАНАЙЗЕР</span>\r\n            <span className=\"header__info\">\r\n                <FontAwesomeIcon\r\n                    className=\"prev-btn\"\r\n                    onClick={() => onClickHandlerPrev()}\r\n                    icon={faChevronLeft}\r\n                />\r\n                <span className=\"header__month-year-wrap\">\r\n                        <span className=\"header__month\">{getMonthName(month)}</span>\r\n                        <span className=\"header__year\">{year}</span>\r\n                </span>\r\n                <FontAwesomeIcon\r\n                    className=\"next-btn\"\r\n                    onClick={() => onClickHandlerNext()}\r\n                    icon={faChevronRight}\r\n                />\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { month, year } = state.date;\r\n    return {\r\n        month,\r\n        year,\r\n    };\r\n  };\r\n  \r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      changeMonth: type => dispatch(changeMonth(type)),\r\n      changeYear: type => dispatch(changeYear(type)),\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Header);","import React from 'react';\r\n// import { Draggable } from 'react-beautiful-dnd';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCircle } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport './Todo.scss';\r\n\r\nconst Todo = (props) => {\r\n    const {title, isCompleted, removeTask, id, completeTask, selectedTask} = props;\r\n\r\n    return (\r\n        // <Draggable draggableId={String(id)} index={index}>\r\n        //     {provided => (\r\n                <li /*{...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}*/ className=\"todo-item\">\r\n                    <FontAwesomeIcon \r\n                        onClick={() => completeTask(id)}\r\n                        icon={isCompleted ? faCheck : faCircle}\r\n                        className={isCompleted ? \"mark-complete\" : \"mark\"}\r\n                    />\r\n                        <span \r\n                            onClick={ () => selectedTask(id) }\r\n                            className={isCompleted ? \"completed text\" : \"text\"}\r\n                            title={title}\r\n                        >\r\n                            {title}\r\n                        </span>\r\n                    <FontAwesomeIcon\r\n                        onClick={() => removeTask(id)}\r\n                        icon={faTrashAlt}\r\n                        className=\"delete\"\r\n                    />\r\n                </li>\r\n        //     )}\r\n        // </Draggable>\r\n    );\r\n}\r\n\r\nTodo.defaultProps = {\r\n    title: '',\r\n    isCompleted: false,\r\n    removeTask: () => {},\r\n    completeTask: () => {},\r\n    id: '',\r\n}\r\n  \r\nexport default Todo;","import React, {useState, useEffect} from 'react';\r\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n// import { Droppable } from \"react-beautiful-dnd\";\r\nimport { connect } from 'react-redux';\r\nimport uuid from 'react-uuid';\r\n\r\nimport Todo from '../Todo/Todo';\r\nimport { removeTaskAction, completeTaskAction, selectTaskAction } from '../../actions/actionCreator';\r\n\r\nimport './TodoList.scss';\r\n\r\nconst TodoList = (props) => {\r\n    const {removeTask, completeTask, selectedDay, filters, selectedTask} = props;\r\n\r\n    const [filteredTasks, setFilteredTasks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const filterTasks = (tasks, activeFilter) => {\r\n            switch (activeFilter) {\r\n                case 'completed':\r\n                    return tasks.filter(task => task.isCompleted);\r\n                case 'active':\r\n                    return tasks.filter(task => !task.isCompleted);\r\n                default:\r\n                    return tasks;\r\n            }\r\n        }\r\n    \r\n        setFilteredTasks(filterTasks(selectedDay.tasks, filters));\r\n        \r\n    }, [filters, selectedDay.tasks]);\r\n\r\n    return (\r\n        // <Droppable droppableId={String(uuid())}>\r\n        //     {provided => (\r\n                <div className={selectedDay.tasks.length >= 8 ? \"todo-list-wrap todo-list-wrap-scroll\" : \"todo-list-wrap\"}>\r\n                    <ul /*{...provided.droppableProps} ref={provided.innerRef}*/ className=\"todo-list\">\r\n                        {/* <TransitionGroup> */}\r\n                            {filteredTasks.map((taskList) => (\r\n                                // <CSSTransition\r\n                                //     key={uuid()}\r\n                                //     timeout={{enter: 300, exit: 50}}\r\n                                //     classNames=\"item\"\r\n                                // > \r\n                                    <Todo\r\n                                        completeTask={completeTask}\r\n                                        removeTask={removeTask}\r\n                                        id={taskList.id}\r\n                                        key={uuid()}\r\n                                        title={taskList.title}\r\n                                        index={taskList.id}\r\n                                        selectedTask={selectedTask}\r\n                                        isCompleted={taskList.isCompleted}\r\n                                    />\r\n                                // </CSSTransition>\r\n                            ))}\r\n                        {/* </TransitionGroup> */}\r\n                        {/* {provided.placeholder} */}\r\n                    </ul>\r\n                    {/* <TransitionGroup>\r\n                        <CSSTransition timeout={300} classNames=\"item\"> */}\r\n                            <span className={filteredTasks.length === 0 ? \"empty\" : \"empty hide\"} > \r\n                                {filteredTasks.length === 0 && filters === \"completed\" ? \"Нет завершенных задач\" : filteredTasks.length === 0 && \"Нет активных задач\"} \r\n                            </span>\r\n                        {/* </CSSTransition>\r\n                    </TransitionGroup> */}\r\n                </div>\r\n        //     )}\r\n        // </Droppable>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { selectedDay } = state.tasks;\r\n    const { filters } = state;\r\n    return {\r\n        selectedDay,\r\n        filters,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeTask: (id) => dispatch(removeTaskAction(id)),\r\n        completeTask: (id) => dispatch(completeTaskAction(id)),\r\n        selectedTask: (id) => dispatch(selectTaskAction(id)),\r\n    }\r\n};\r\n\r\nTodoList.defaultProps = {\r\n    tasksList: [],\r\n    removeTask: () => {},\r\n    completeTask: () => {},\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","import React, { useState, useEffect }  from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeFilterAction } from '../../actions/actionCreator';\r\n\r\nimport './FilterTodo.scss';\r\n\r\nconst FILTERS_BTN = [\r\n    {\r\n        text: 'Все',\r\n        id: 'all',\r\n    },\r\n    {\r\n        text: 'Активные',\r\n        id: 'active',\r\n    },\r\n    {\r\n        text: 'Завершенные',\r\n        id: 'completed',\r\n    },\r\n];\r\n\r\nconst FilterTodo = (props) => {\r\n    const {selectedDay, filters, changeFilter} = props;\r\n\r\n    const [activeCounter, setActiveCounter] = useState(0);\r\n    const [completedCounter, setCompletedCounter] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const getActiveTasksCounter = tasks => tasks.filter(task => !task.isCompleted).length;\r\n        const getCompletedCounter = tasks => tasks.filter(task => task.isCompleted).length;\r\n    \r\n        setActiveCounter(getActiveTasksCounter(selectedDay.tasks));\r\n        setCompletedCounter(getCompletedCounter(selectedDay.tasks));\r\n    }, [selectedDay.tasks])\r\n\r\n    const checkCounter = (counter, text) => {\r\n        if (counter === 1) {\r\n            return `${counter} ${text}ая задача`;\r\n        } else if (counter >= 2 && counter <= 4) {\r\n            return `${counter} ${text}ыe задачи`;\r\n        } else {\r\n            return `${counter} ${text}ых задач`;\r\n        }\r\n    }\r\n\r\n    const checkAllCounter = (counter) => {\r\n        if (counter === 1) {\r\n            return `${counter} задача`;\r\n        } else if (counter >= 2 && counter <= 4) {\r\n            return `${counter} задачи`;\r\n        } else {\r\n            return `${counter} задач`;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"filter-todo\">\r\n            <span className=\"amount\">\r\n                {filters === \"completed\" ? checkCounter(completedCounter, \"завершенн\") : filters === \"active\" ? checkCounter(activeCounter, \"активн\") : `Всего ${checkAllCounter(selectedDay.tasks.length)}`} \r\n            </span>\r\n            <div className=\"btn-group\">\r\n                {FILTERS_BTN.map(({text, id}) => (\r\n                    <button \r\n                        onClick={() => changeFilter(id)}\r\n                        key={id}\r\n                        className={id === filters ? \"filter-btn active\" : \"filter-btn\"}\r\n                    >\r\n                        {text}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFilterTodo.defaultProps = {\r\n    amount: 0,\r\n    text: 'Add todo',\r\n    changeFilter: () => {},\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { selectedDay } = state.tasks;\r\n    const { filters } = state;\r\n    return {\r\n        selectedDay,\r\n        filters,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeFilter: activeFilter => dispatch(changeFilterAction(activeFilter)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterTodo);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// import { DragDropContext } from 'react-beautiful-dnd';\r\n\r\nimport TodoList from '../../components/TodoList/TodoList';\r\nimport FilterTodo from '../../components/FilterTodo/FilterTodo';\r\nimport { sortTasksAction, changeIsAddModeAction } from '../../actions/actionCreator';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Todos.scss';\r\n\r\n\r\nconst Todos = (props) => {\r\n    const { selectedDay, /*sortTasks,*/ changeIsAdd, isAddMode } = props;\r\n    \r\n    // const onDragEnd = ({destination, source, draggableId}) => {\r\n    //     if(!destination) {\r\n    //         return;\r\n    //     }\r\n        \r\n    //     sortTasks(\r\n    //         source.index,\r\n    //         destination.index,\r\n    //         draggableId\r\n    //     );\r\n    // }\r\n\r\n    return (\r\n        // <DragDropContext /*onDragEnd={onDragEnd}*/>\r\n            <div className=\"todos\">\r\n                {selectedDay && (\r\n                    <>\r\n                        <div className=\"title\">Задачи на {selectedDay.dayTitle}</div>\r\n                        {selectedDay.tasks.length === 0 ? (\r\n                            <>\r\n                                <span className=\"todos-no-tasks\">В настояще время нет активных задач!</span>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <TodoList />\r\n                                <FilterTodo />\r\n                            </>\r\n                        )}\r\n                    </>\r\n                )}\r\n                <FontAwesomeIcon\r\n                    className=\"todos-add-btn\"\r\n                    onClick={() => changeIsAdd(isAddMode)}\r\n                    icon={faPlus}\r\n                    title=\"Добавить задачу\"\r\n                />\r\n            </div>\r\n        // </DragDropContext>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { selectedDay, isAddMode } = state.tasks;\r\n    return {\r\n        selectedDay,\r\n        isAddMode\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sortTasks: (droppableIndexStart, droppableIndexEnd, draggableId) => dispatch(sortTasksAction(droppableIndexStart, droppableIndexEnd, draggableId)),\r\n        changeIsAdd: (isAddMode) => dispatch(changeIsAddModeAction(isAddMode)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\r\n","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './ReadOnlyTask.scss';\r\n\r\nconst ReadOnlyTask = (props) => {\r\n    const {selectedTask, setEditMode, editMode} = props;\r\n\r\n    return (\r\n        <div className=\"editbox__wrap\">\r\n            <div className=\"editbox__task-wrap\">\r\n                <span className=\"editbox__task__name\">Название</span>\r\n                <span className=\"editbox__task__title\">\r\n                    {selectedTask.title}\r\n                </span>\r\n                { selectedTask.description.length > 0 && (\r\n                        <>\r\n                            <span className=\"editbox__task__name\">Описание</span>\r\n                            <span className=\"editbox__task__description\">\r\n                                {selectedTask.description}\r\n                            </span> \r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n            <FontAwesomeIcon\r\n                className=\"editbox__edit-btn\"\r\n                onClick={() => setEditMode(!editMode)}\r\n                icon={faPencilAlt}\r\n                title=\"Редактировать\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadOnlyTask;","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Form.scss';\r\n\r\nconst Form = (props) => {\r\n    const { changeMode, argument, title, description, setTitle, setDescription, handleClick } = props;\r\n    \r\n    return (\r\n        <div className=\"form-wrap\">\r\n            <form className=\"form-add\">\r\n                <label htmlFor=\"title\" className=\"form__name\">Название</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    id=\"title\"\r\n                    value={title} \r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    className=\"form__title\"\r\n                    maxLength=\"40\"\r\n                    required\r\n                />\r\n                <label htmlFor=\"description\" className=\"form__name\">Описание</label>\r\n                <textarea \r\n                    name=\"description\"\r\n                    id=\"description\"\r\n                    cols=\"30\"\r\n                    rows=\"5\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    className=\"form__description\"\r\n                    maxLength=\"200\"\r\n                />\r\n            </form>\r\n            <div className=\"button-wrap\">\r\n                <FontAwesomeIcon \r\n                    onClick={() => handleClick()}\r\n                    icon={faCheck}\r\n                    className=\"save\"\r\n                    title=\"Сохранить\"\r\n                />\r\n                <FontAwesomeIcon\r\n                    onClick={() => changeMode(argument)}\r\n                    icon={faTimes}\r\n                    className=\"cancel\"\r\n                    title=\"Отменить\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import React, { useState } from 'react';\r\n\r\nimport Form from '../Form/Form';\r\n\r\nimport './EditModeTask.scss';\r\n\r\nconst EditModeTask = (props) => {\r\n    const { selectedTask, setEditMode, editMode, changeTask } = props;\r\n    const [title, setTitle] = useState(selectedTask.title);\r\n    const [description, setDescription] = useState(selectedTask.description);\r\n\r\n    const handleClick = () => {\r\n        if (title.trim() !== '') {\r\n            setEditMode(!editMode);\r\n            changeTask(selectedTask.id, title, description);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            changeMode={setEditMode}\r\n            argument={!editMode}\r\n            title={title}\r\n            description={description}\r\n            setTitle={setTitle}\r\n            setDescription={setDescription}\r\n            handleClick={handleClick}\r\n        />\r\n    )\r\n}\r\n\r\nexport default EditModeTask;","import React, { useState } from 'react';\r\nimport uuid from 'react-uuid';\r\n\r\nimport Form from '../Form/Form';\r\n\r\nimport './AddMode.scss';\r\n\r\nconst AddMode = (props) => {\r\n    const { changeIsAdd, isAddMode, addTask } = props;\r\n    const [addTitle, setAddTitle] = useState(\"\");\r\n    const [addDescription, setAddDescription] = useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        if (addTitle.trim() !== '') {\r\n            changeIsAdd(isAddMode);\r\n            addTask(uuid(), addTitle, addDescription, false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Form\r\n            changeMode={changeIsAdd}\r\n            argument={isAddMode}\r\n            title={addTitle}\r\n            description={addDescription}\r\n            setTitle={setAddTitle}\r\n            setDescription={setAddDescription}\r\n            handleClick={handleClick}\r\n        />\r\n    )\r\n}\r\n\r\nexport default AddMode;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeTaskAction, changeIsAddModeAction, addTaskAction } from '../../actions/actionCreator';\r\nimport ReadOnlyTask from '../../components/ReadOnlyTask/ReadOnlyTask';\r\nimport EditModeTask from '../../components/EditModeTask/EditModeTask';\r\nimport AddMode from '../../components/AddMode/AddMode';\r\n\r\nimport './Editbox.scss';\r\n\r\nconst Editbox = (props) => {\r\n    const { changeTask, selectedDay, selectedTask, isAddMode, changeIsAdd, addTask } = props;\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    return (\r\n        <div className=\"editbox\">\r\n            {selectedDay && \r\n                <div className=\"editbox__task\">\r\n                    {isAddMode ? (\r\n                        <AddMode changeIsAdd={changeIsAdd} isAddMode={isAddMode} addTask={addTask} />\r\n                        ) : (\r\n                            selectedTask ? (\r\n                                !editMode ? (\r\n                                        <ReadOnlyTask selectedTask={selectedTask} setEditMode={setEditMode} editMode={editMode} />\r\n                                    ) : (\r\n                                        <EditModeTask selectedTask={selectedTask} setEditMode={setEditMode} editMode={editMode} changeTask={changeTask} />\r\n                                    )\r\n                            ) : (\r\n                                <div className=\"editbox-no-tasks\">Выберете задачу</div>\r\n                            )\r\n                        )\r\n                    }                   \r\n                </div>\r\n            } \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    const { selectedDay, selectedTask, isAddMode } = state.tasks;\r\n    return {\r\n        selectedDay,\r\n        selectedTask,\r\n        isAddMode,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeTask: (id, title, description) => dispatch(changeTaskAction(id, title, description)),\r\n        changeIsAdd: (isAddMode) => dispatch(changeIsAddModeAction(isAddMode)),\r\n        addTask: (taskId, title, description, isCompleted) => dispatch(addTaskAction(taskId, title, description, isCompleted)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Editbox);","  \r\nimport React from 'react';\r\n\r\n// Components\r\n\r\n// Style\r\nimport './Social.scss';\r\n\r\nconst Social = ({socialImg, link}) => {\r\n    return (\r\n        <a href={link} className=\"social\" target=\"_blank\" rel=\"noopener noreferrer\"> \r\n           <img src={`/img/svg/${socialImg}.svg`} alt=\"\" className=\"social-img\" />\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default Social;","  \r\nimport React from 'react';\r\n\r\n// Components\r\nimport Social from './Social/Social';\r\n\r\n// Styles\r\nimport './Socials.scss';\r\n\r\nconst socials = [\r\n    {socialImg: 'vk', link: 'https://vk.com/ludingennady'},\r\n    {socialImg: 'facebook', link: 'https://www.facebook.com/RussianGarry1980'},\r\n    {socialImg: 'linkedin', link: 'https://www.linkedin.com/in/gennadiyludin/'},\r\n    {socialImg: 'github', link: 'https://github.com/GennadjiLudin/react-redux_calendar'},\r\n];\r\n\r\nconst Socials = () => {\r\n    return (\r\n        <div className=\"socials\">\r\n            {socials.map((social, index) => (\r\n                <Social \r\n                    {...social}\r\n                    key={index}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Socials;","import React from 'react';\r\n\r\nimport Socials from '../Socials/Socials';\r\n\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <Socials />\r\n            <div> &copy; Copyright 2019-2020. All Rights Reserved. </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport './Section.scss';\r\n\r\nconst Section = ({ children }) => (\r\n    <div className=\"organizer-section\">\r\n        {children}\r\n    </div>\r\n)\r\n\r\nexport default Section;","import React, {useState} from 'react';\r\n\r\nimport Todos from '../../containers/Todos/Todos';\r\nimport Editbox from '../../containers/Editbox/Editbox';\r\nimport Footer from '../Footer/Footer';\r\nimport Section from '../../containers/Sections/Section';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowCircleLeft , faArrowCircleRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Organizer.scss';\r\n\r\nconst Organizer = () => {\r\n    const [hide, setHide] = useState(false);\r\n\r\n    return (\r\n        <div className={`organizer ${hide ? \"hide\" : \"\"}`}>\r\n            <Section>\r\n                <Todos />\r\n            </Section>\r\n            <Section>\r\n                <Editbox />\r\n            </Section>\r\n            <Footer />\r\n            <FontAwesomeIcon\r\n                className={`organizer-btn ${hide ? \"organizer-btn-show\" : \"\"}`}\r\n                onClick={() => setHide(!hide)}\r\n                icon={hide ? faArrowCircleRight : faArrowCircleLeft}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Organizer;","import React from 'react';\n\nimport Calendar from './containers/Calendar/Calendar';\nimport Header from './layers/Header/Header';\nimport Organizer from './components/Organizer/Organizer';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"app-wrapper\">\n      <Header />\n      <div className=\"calendar-wrap\">\n        <Organizer />\n        <Calendar />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CHANGE_MONTH, CHANGE_YEAR } from '../actions/actionHeader';\r\n\r\nimport { \r\n    getPrevMonth, \r\n    getNextMonth, \r\n} from '../helpers/helpers';\r\n\r\nlet DATES = {\r\n    month: new Date().getMonth(),\r\n    year: new Date().getFullYear(),\r\n};\r\n\r\nconst date = (state = DATES, action) => {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case CHANGE_MONTH:\r\n            return {\r\n                ...state,\r\n                month: payload.type === \"next\" ? getNextMonth(state.month) : getPrevMonth(state.month),\r\n            }\r\n        case CHANGE_YEAR: \r\n            return {\r\n                ...state,\r\n                year: payload.type === \"next\" ? state.year + 1 : state.year - 1,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default date;","import { CHANGE_FILTERS } from '../actions/actionCreator';\r\n\r\nconst BASE_FILTER = 'all';\r\n\r\nconst filters = (state = BASE_FILTER, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case CHANGE_FILTERS:\r\n            return payload.activeFilter;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default filters;","import { ADD_TASK, GET_ALL_DAYS, REMOVE_TASK, COMPLETE_TASK, CHANGE_TASK, /*DRAG_HAPPENED,*/ SELECT_DAY, SELECT_TASK, CHANGE_ADD_MODE } from '../actions/actionCreator';\r\n\r\nconst TASKS = {\r\n    allDays: {},\r\n    selectedDay: null,\r\n    selectedTask: null,\r\n    isAddMode: false,\r\n};\r\n\r\n\r\n\r\nconst tasks = (state = TASKS, action) => {\r\n    const { type, payload } = action;\r\n    const setLocalStorage = newAllDays =>  localStorage.setItem(\"allDays\", JSON.stringify(newAllDays));\r\n    let newAllDaysObj;\r\n\r\n    switch(type) {\r\n        case GET_ALL_DAYS:\r\n            return {\r\n                ...state,\r\n                allDays: payload.allDays ? payload.allDays : state.allDays,\r\n            }\r\n        case SELECT_DAY:\r\n            let newDays = {...state.allDays};\r\n            if (!newDays[payload.id]) {\r\n                newDays[payload.id] = {\r\n                    id: payload.id,\r\n                    dayTitle: `${payload.day}.${payload.month}.${payload.year}`,\r\n                    tasks: [],\r\n                };\r\n            }\r\n            console.log(newDays[payload.id])\r\n            return {\r\n                ...state, \r\n                allDays: newDays,\r\n                selectedDay: newDays[payload.id],\r\n                selectedTask: newDays[payload.id].tasks[0],\r\n            };\r\n        case SELECT_TASK:\r\n            let newSelectTasks = [...state.selectedDay.tasks].find(task => task.id === payload.taskId);\r\n            return {\r\n                ...state,\r\n                selectedTask: newSelectTasks,\r\n            }\r\n        case CHANGE_ADD_MODE:\r\n            return {\r\n                ...state,\r\n                isAddMode: !payload.isAddMode,\r\n            }\r\n        case ADD_TASK:\r\n            let newAddTask = {\r\n                id: payload.taskId,\r\n                title: payload.title,\r\n                description: payload.description,\r\n                isCompleted: payload.isCompleted,\r\n            }\r\n\r\n            let newAddTaskInSelectedDay = {\r\n                ...state.selectedDay,\r\n                tasks: [\r\n                    ...state.selectedDay.tasks,\r\n                    newAddTask,\r\n                ]\r\n            }\r\n\r\n            newAllDaysObj =  {\r\n                ...state.allDays,\r\n                [state.selectedDay.id]: newAddTaskInSelectedDay,\r\n            }\r\n\r\n            setLocalStorage(newAllDaysObj);\r\n            return {\r\n                ...state, \r\n                selectedTask: newAddTask,\r\n                selectedDay: newAddTaskInSelectedDay,\r\n                allDays: newAllDaysObj,\r\n            };\r\n        case REMOVE_TASK:\r\n            let newSelectedDay = {\r\n                ...state.selectedDay,\r\n                tasks: state.selectedDay.tasks.filter(task => task.id !== payload.taskId)\r\n            };\r\n\r\n            newAllDaysObj =  {\r\n                ...state.allDays,\r\n                [state.selectedDay.id]: newSelectedDay,\r\n            }\r\n\r\n            setLocalStorage(newAllDaysObj);\r\n            return {\r\n                ...state,\r\n                selectedDay: newSelectedDay,\r\n                allDays: newAllDaysObj,\r\n                selectedTask: payload.taskId === state.selectedTask.id ? null : state.selectedTask,\r\n            };\r\n        case COMPLETE_TASK:\r\n            let newStateTasks = {\r\n                ...state.selectedDay,\r\n                tasks: state.selectedDay.tasks.map(task => {\r\n                        let newTask = {...task};\r\n                        if(newTask.id === payload.taskId) {\r\n                            newTask.isCompleted = !newTask.isCompleted;\r\n                        }\r\n                        return newTask;\r\n                    })\r\n                };\r\n\r\n            newAllDaysObj =  {\r\n                ...state.allDays,\r\n                [state.selectedDay.id]: newStateTasks,\r\n            }\r\n\r\n            setLocalStorage(newAllDaysObj);\r\n            return {\r\n                ...state,\r\n                selectedDay: newStateTasks,\r\n                allDays: newAllDaysObj,\r\n            };\r\n        case CHANGE_TASK:\r\n            let newChangeTask = {\r\n                ...state.selectedTask,\r\n                title: payload.title,\r\n                description: payload.description,\r\n            }\r\n\r\n            let newSelectedDayTasks = {\r\n                ...state.selectedDay,\r\n                tasks: state.selectedDay.tasks.map(task => {\r\n                    let newChangeTaskDay = {...task};\r\n                    if(newChangeTaskDay.id === payload.taskId) {\r\n                        newChangeTaskDay = newChangeTask;\r\n                    }\r\n                    return newChangeTaskDay;\r\n                })\r\n            }\r\n\r\n            newAllDaysObj =  {\r\n                ...state.allDays,\r\n                [state.selectedDay.id]: newSelectedDayTasks,\r\n            }\r\n\r\n            setLocalStorage(newAllDaysObj);\r\n            return {\r\n                ...state,\r\n                selectedDay: newSelectedDayTasks,\r\n                allDays: newAllDaysObj,\r\n                selectedTask: newChangeTask,\r\n            };\r\n        // case DRAG_HAPPENED:\r\n        //         let newState = [...state.selectedDay.tasks];\r\n        //         const taskReplaced = newState.splice(payload.droppableIndexStart, 1);\r\n        //         newState.splice(payload.droppableIndexEnd, 0, ...taskReplaced);\r\n        //     return {\r\n        //         ...state,\r\n        //         selectedDay: newState,\r\n        //         allDays: {\r\n        //             ...state.allDays,\r\n        //             [payload.selectedId]: newState,\r\n        //         },\r\n        //     };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default tasks;","import { combineReducers } from 'redux';\r\nimport date from './date';\r\nimport filters from './filters';\r\nimport tasks from './tasks';\r\n\r\nconst rootReducer = combineReducers({\r\n    date,\r\n    filters,\r\n    tasks,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}